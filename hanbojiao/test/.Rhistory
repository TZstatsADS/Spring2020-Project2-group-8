color = high_sugar$restaurant,type="bar")%>%layout(title="Top High Sugar Restaurants",height=400)
low_sugar <- sugar_content%>%arrange(desc(tsugar))%>%tail(26)
plow<-plot_ly(x= low_sugar$restaurant,y=low_sugar$tsugar,
color = low_sugar$restaurant,type="bar")%>%layout(title="Top low Sugar Restaurants",height=400)
p13 <- plot_ly(x = subset_nutrition$Food_Category, y=subset_nutrition$Dietary_Fiber,color = subset_nutrition$Food_Category,colors =new_col , type = "bar") %>% layout(
xaxis = list(title = ""),
yaxis = list(title = ""),
showlegend=FALSE,
autosize = T)
df_content<-subset_nutrition%>% select(restaurant,Food_Category,Dietary_Fiber)%>% group_by(restaurant)%>%summarise(tdf = sum(Dietary_Fiber))
high_df <- df_content%>%arrange(desc(tdf))%>%head(26)
p14<-plot_ly(x= high_df$restaurant,y=high_df$tdf,
color = high_df$restaurant,type="bar")%>%layout(title="Top High Dietary Fiber Restaurants",height=400)
save(p1,p2,p3,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,plow,file = "../output/data_statistics.RData")
runApp('~/GitHub/Spring2020-Project2-group-8/hanbojiao/test')
packages.used=c("shiny", "leaflet","plotly","sodium_contenta.table","shinyWidgets","googleVis","geosphere","leaflet.extras","shinythemes","ggmap","dplyr","‘RColorBrewer","viridis","gridextra")
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
library(shiny)
library(leaflet)
library(plotly)
library(shinyWidgets)
library(googleVis)
library(geosphere)
library(leaflet.extras)
library(tidyverse)
library(shinythemes)
library(ggmap)
library(dplyr)
# library(RColorBrewer)
library(viridis)
library(gridExtra)
load("../output/menu_nutrition_location_catagory.RData")
menu_clean <- menu_nutrition_location_catagory
subset_nutrition <-menu_clean %>%select(restaurant,menu)%>%unnest(menu)%>%
select(restaurant,Item_Name,Item_Description,Food_Category,Calories:Dietary_Fiber,Shareable)%>%
filter(Shareable==0)%>%select(-Potassium,-Shareable)%>%group_by(restaurant)%>%arrange(restaurant)%>%nest()%>%ungroup%>%mutate(restaurant_id=row_number())%>%group_by(restaurant)%>%unnest()%>%mutate(menu_id=row_number())%>%
select(restaurant_id,restaurant,menu_id,Item_Name,Item_Description,Food_Category,everything())
#colname<-subset_nutrition%>%colnames()
#nutrition<-colname[9:18]
#food_category<-subset_nutrition$Food_Category%>%unique()
subset_nutrition$Calories[which(is.na(subset_nutrition$Calories))] = 0
subset_nutrition$Total_Fat[which(is.na(subset_nutrition$Total_Fat))] = 0
subset_nutrition$Saturated_Fat[which(is.na(subset_nutrition$Saturated_Fat))] = 0
subset_nutrition$Trans_Fat[which(is.na(subset_nutrition$Trans_Fat))] = 0
subset_nutrition$Cholesterol[which(is.na(subset_nutrition$Cholesterol))] = 0
subset_nutrition$Sodium[which(is.na(subset_nutrition$Sodium))] = 0
subset_nutrition$Carbohydrates[which(is.na(subset_nutrition$Carbohydrates))] = 0
subset_nutrition$Protein[which(is.na(subset_nutrition$Protein))] = 0
subset_nutrition$Sugar[which(is.na(subset_nutrition$Sugar))] = 0
subset_nutrition$Dietary_Fiber[which(is.na(subset_nutrition$Dietary_Fiber))] = 0
new_col<-c("grey50", "blue","hotpink","Magenta","orange", "red","seagreen","violet","brown","maroon","navyblue", "yellow")
p1 <- plot_ly(x = subset_nutrition$Food_Category,  y = subset_nutrition$Calories,color = subset_nutrition$Food_Category,colors = new_col, type = "box")%>%
layout(title = "Calories",
xaxis = list(title = ""),
yaxis = list(title = "Calories"),
showlegend=FALSE,
autosize = T)
protein_content<-subset_nutrition%>% select(restaurant,Food_Category,Protein)%>% group_by(Food_Category)%>%summarise(tprotein = sum(Protein))
p2 <-  plot_ly(
x = protein_content$tprotein,
y = protein_content$Food_Category,
marker = list(color = new_col),
type = "bar"
)
p3 <- plot_ly(x = subset_nutrition$Food_Category, y=subset_nutrition$Total_Fat,color = subset_nutrition$Food_Category,colors =new_col , type = "box") %>%
layout(title = "Total Fat",
xaxis = list(title = ""),
yaxis = list(title = ""),
showlegend=FALSE,
autosize = T)
cholesterol_content<-subset_nutrition%>% select(restaurant,Food_Category,Cholesterol)%>% group_by(Food_Category)%>%summarise(tcholesterol = sum(Cholesterol))
high_ch <- cholesterol_content%>%arrange(desc(tcholesterol))%>% head(6)
p5<-plot_ly(x= high_ch$Food_Category,y=high_ch$tcholesterol,
color = high_ch$food_category,type="bar")%>%layout(title="High Cholesterol Category",height=400)
low_ch <-cholesterol_content%>%arrange(desc(tcholesterol))%>% tail(6)
p6 <-plot_ly(x= low_ch$Food_Category,y=low_ch$tcholesterol,
color = low_ch$food_category,type="bar")%>%layout(title="Low Cholesterol Category",height=400)
carb_content<-subset_nutrition%>% select(restaurant,Food_Category,Carbohydrates)%>% group_by(restaurant)%>%summarise(tcarb = sum(Carbohydrates))
low_carb <- carb_content%>%arrange(desc(tcarb))%>%tail(26)
p7<-plot_ly(x= low_carb$restaurant,y=low_carb$tcarb,
color = low_carb$restaurant,type="bar")%>%layout(title="Carbohydrates content by Restaurant",height=400)
high_carb <- carb_content%>%arrange(desc(tcarb))%>%head(26)
p8<-plot_ly(x= high_carb$restaurant,y=high_carb$tcarb,
color = high_carb$restaurant,type="bar")%>%layout(title="Carbohydrates content by Restaurant",height=400)
sodium_content<-subset_nutrition%>% select(restaurant,Food_Category,Sodium)%>% group_by(restaurant)%>%summarise(tsodium = sum(Sodium))
low_sodium <- sodium_content%>%arrange(desc(tsodium))%>%head(26)
p9<-plot_ly(x= low_sodium$restaurant,y=low_sodium$tsodium,
color = low_sodium$restaurant,type="bar")%>%layout(title="Top low sodium Restaurants",height=400)
sodium_content1<-subset_nutrition%>% select(restaurant,Food_Category,Sodium)%>% group_by(restaurant)%>%summarise(tsodium1 = sum(Sodium))
high_sodium1 <- sodium_content1%>%arrange(desc(tsodium1))%>%head(26)
p10<-plot_ly(x= high_sodium1$restaurant,y=high_sodium1$tsodium1,
color = high_sodium1$restaurant,type="bar")%>%layout(title="Top High Sodium Restaurants",height=400)
sugar_content<-subset_nutrition%>% select(restaurant,Food_Category,Sugar)%>% group_by(Food_Category)%>%summarise(tsugar = sum(Sugar))
p11 <- plot_ly(
x = sugar_content$tsugar,
y = sugar_content$Food_Category,
marker = list(color = new_col),
type = "bar"
)
sugar_content<-subset_nutrition%>% select(restaurant,Food_Category,Sugar)%>% group_by(restaurant)%>%summarise(tsugar = sum(Sugar))
sugar_content
high_sugar <- sugar_content%>%arrange(desc(tsugar))%>%head(26)
p12<-plot_ly(x= high_sugar$restaurant,y=high_sugar$tsugar,
color = high_sugar$restaurant,type="bar")%>%layout(title="Top High Sugar Restaurants",height=400)
low_sugar <- sugar_content%>%arrange(desc(tsugar))%>%tail(26)
plow<-plot_ly(x= low_sugar$restaurant,y=low_sugar$tsugar,
color = low_sugar$restaurant,type="bar")%>%layout(title="Top low Sugar Restaurants",height=400)
p13 <- plot_ly(x = subset_nutrition$Food_Category, y=subset_nutrition$Dietary_Fiber,color = subset_nutrition$Food_Category,colors =new_col , type = "bar") %>% layout(
xaxis = list(title = ""),
yaxis = list(title = ""),
showlegend=FALSE,
autosize = T)
df_content<-subset_nutrition%>% select(restaurant,Food_Category,Dietary_Fiber)%>% group_by(restaurant)%>%summarise(tdf = sum(Dietary_Fiber))
high_df <- df_content%>%arrange(desc(tdf))%>%head(26)
p14<-plot_ly(x= high_df$restaurant,y=high_df$tdf,
color = high_df$restaurant,type="bar")%>%layout(title="Top High Dietary Fiber Restaurants",height=400)
save(p1,p2,p3,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,plow,file = "../output/data_statistics.RData")
runApp('~/GitHub/Spring2020-Project2-group-8/hanbojiao/test')
packages.used=c("shiny", "leaflet","plotly","sodium_contenta.table","shinyWidgets","googleVis","geosphere","leaflet.extras","shinythemes","ggmap","dplyr","‘RColorBrewer","viridis","gridextra")
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
library(shiny)
library(leaflet)
library(plotly)
library(shinyWidgets)
library(googleVis)
library(geosphere)
library(leaflet.extras)
library(tidyverse)
library(shinythemes)
library(ggmap)
library(dplyr)
library(RColorBrewer)
library(viridis)
library(gridExtra)
load("../output/menu_nutrition_location_catagory.RData")
menu_clean <- menu_nutrition_location_catagory
subset_nutrition <-menu_clean %>%select(restaurant,menu)%>%unnest(menu)%>%
select(restaurant,Item_Name,Item_Description,Food_Category,Calories:Dietary_Fiber,Shareable)%>%
filter(Shareable==0)%>%select(-Potassium,-Shareable)%>%group_by(restaurant)%>%arrange(restaurant)%>%nest()%>%ungroup%>%mutate(restaurant_id=row_number())%>%group_by(restaurant)%>%unnest()%>%mutate(menu_id=row_number())%>%
select(restaurant_id,restaurant,menu_id,Item_Name,Item_Description,Food_Category,everything())
#colname<-subset_nutrition%>%colnames()
#nutrition<-colname[9:18]
#food_category<-subset_nutrition$Food_Category%>%unique()
subset_nutrition$Calories[which(is.na(subset_nutrition$Calories))] = 0
subset_nutrition$Total_Fat[which(is.na(subset_nutrition$Total_Fat))] = 0
subset_nutrition$Saturated_Fat[which(is.na(subset_nutrition$Saturated_Fat))] = 0
subset_nutrition$Trans_Fat[which(is.na(subset_nutrition$Trans_Fat))] = 0
subset_nutrition$Cholesterol[which(is.na(subset_nutrition$Cholesterol))] = 0
subset_nutrition$Sodium[which(is.na(subset_nutrition$Sodium))] = 0
subset_nutrition$Carbohydrates[which(is.na(subset_nutrition$Carbohydrates))] = 0
subset_nutrition$Protein[which(is.na(subset_nutrition$Protein))] = 0
subset_nutrition$Sugar[which(is.na(subset_nutrition$Sugar))] = 0
subset_nutrition$Dietary_Fiber[which(is.na(subset_nutrition$Dietary_Fiber))] = 0
new_col<-c("grey50", "blue","hotpink","Magenta","orange", "red","seagreen","violet","brown","maroon","navyblue", "yellow")
p1 <- plot_ly(x = subset_nutrition$Food_Category,  y = subset_nutrition$Calories,color = subset_nutrition$Food_Category,colors = new_col, type = "box")%>%
layout(title = "Calories",
xaxis = list(title = ""),
yaxis = list(title = "Calories"),
showlegend=FALSE,
autosize = T)
protein_content<-subset_nutrition%>% select(restaurant,Food_Category,Protein)%>% group_by(Food_Category)%>%summarise(tprotein = sum(Protein))
p2 <-  plot_ly(
x = protein_content$tprotein,
y = protein_content$Food_Category,
marker = list(color = new_col),
type = "bar"
)
p3 <- plot_ly(x = subset_nutrition$Food_Category, y=subset_nutrition$Total_Fat,color = subset_nutrition$Food_Category,colors =new_col , type = "box") %>%
layout(title = "Total Fat",
xaxis = list(title = ""),
yaxis = list(title = ""),
showlegend=FALSE,
autosize = T)
cholesterol_content<-subset_nutrition%>% select(restaurant,Food_Category,Cholesterol)%>% group_by(Food_Category)%>%summarise(tcholesterol = sum(Cholesterol))
high_ch <- cholesterol_content%>%arrange(desc(tcholesterol))%>% head(6)
p5<-plot_ly(x= high_ch$Food_Category,y=high_ch$tcholesterol,
color = high_ch$food_category,type="bar")%>%layout(title="High Cholesterol Category",height=400)
low_ch <-cholesterol_content%>%arrange(desc(tcholesterol))%>% tail(6)
p6 <-plot_ly(x= low_ch$Food_Category,y=low_ch$tcholesterol,
color = low_ch$food_category,type="bar")%>%layout(title="Low Cholesterol Category",height=400)
carb_content<-subset_nutrition%>% select(restaurant,Food_Category,Carbohydrates)%>% group_by(restaurant)%>%summarise(tcarb = sum(Carbohydrates))
low_carb <- carb_content%>%arrange(desc(tcarb))%>%tail(26)
p7<-plot_ly(x= low_carb$restaurant,y=low_carb$tcarb,
color = low_carb$restaurant,type="bar")%>%layout(title="Carbohydrates content by Restaurant",height=400)
high_carb <- carb_content%>%arrange(desc(tcarb))%>%head(26)
p8<-plot_ly(x= high_carb$restaurant,y=high_carb$tcarb,
color = high_carb$restaurant,type="bar")%>%layout(title="Carbohydrates content by Restaurant",height=400)
sodium_content<-subset_nutrition%>% select(restaurant,Food_Category,Sodium)%>% group_by(restaurant)%>%summarise(tsodium = sum(Sodium))
low_sodium <- sodium_content%>%arrange(desc(tsodium))%>%head(26)
p9<-plot_ly(x= low_sodium$restaurant,y=low_sodium$tsodium,
color = low_sodium$restaurant,type="bar")%>%layout(title="Top low sodium Restaurants",height=400)
sodium_content1<-subset_nutrition%>% select(restaurant,Food_Category,Sodium)%>% group_by(restaurant)%>%summarise(tsodium1 = sum(Sodium))
high_sodium1 <- sodium_content1%>%arrange(desc(tsodium1))%>%head(26)
p10<-plot_ly(x= high_sodium1$restaurant,y=high_sodium1$tsodium1,
color = high_sodium1$restaurant,type="bar")%>%layout(title="Top High Sodium Restaurants",height=400)
sugar_content<-subset_nutrition%>% select(restaurant,Food_Category,Sugar)%>% group_by(Food_Category)%>%summarise(tsugar = sum(Sugar))
p11 <- plot_ly(
x = sugar_content$tsugar,
y = sugar_content$Food_Category,
marker = list(color = new_col),
type = "bar"
)
sugar_content<-subset_nutrition%>% select(restaurant,Food_Category,Sugar)%>% group_by(restaurant)%>%summarise(tsugar = sum(Sugar))
sugar_content
high_sugar <- sugar_content%>%arrange(desc(tsugar))%>%head(26)
p12<-plot_ly(x= high_sugar$restaurant,y=high_sugar$tsugar,
color = high_sugar$restaurant,type="bar")%>%layout(title="Top High Sugar Restaurants",height=400)
low_sugar <- sugar_content%>%arrange(desc(tsugar))%>%tail(26)
plow<-plot_ly(x= low_sugar$restaurant,y=low_sugar$tsugar,
color = low_sugar$restaurant,type="bar")%>%layout(title="Top low Sugar Restaurants",height=400)
p13 <- plot_ly(x = subset_nutrition$Food_Category, y=subset_nutrition$Dietary_Fiber,color = subset_nutrition$Food_Category,colors =new_col , type = "bar") %>% layout(
xaxis = list(title = ""),
yaxis = list(title = ""),
showlegend=FALSE,
autosize = T)
df_content<-subset_nutrition%>% select(restaurant,Food_Category,Dietary_Fiber)%>% group_by(restaurant)%>%summarise(tdf = sum(Dietary_Fiber))
high_df <- df_content%>%arrange(desc(tdf))%>%head(26)
p14<-plot_ly(x= high_df$restaurant,y=high_df$tdf,
color = high_df$restaurant,type="bar")%>%layout(title="Top High Dietary Fiber Restaurants",height=400)
save(p1,p2,p3,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,plow,file = "../output/data_statistics.RData")
p1 <- plot_ly(x = subset_nutrition$Food_Category,  y = subset_nutrition$Calories,color = subset_nutrition$Food_Category, type = "box")%>%
layout(title = "Calories",
xaxis = list(title = ""),
yaxis = list(title = "Calories"),
showlegend=FALSE,
autosize = T)
p1
new_col<-rep("red",12)
p1 <- plot_ly(x = subset_nutrition$Food_Category,  y = subset_nutrition$Calories,color = subset_nutrition$Food_Category,colors = new_col, type = "box")%>%
layout(title = "Calories",
xaxis = list(title = ""),
yaxis = list(title = "Calories"),
showlegend=FALSE,
autosize = T)
p1
packages.used=c("shiny", "leaflet","plotly","sodium_contenta.table","shinyWidgets","googleVis","geosphere","leaflet.extras","shinythemes","ggmap","dplyr","‘RColorBrewer","viridis","gridextra")
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
library(shiny)
library(leaflet)
library(plotly)
library(shinyWidgets)
library(googleVis)
library(geosphere)
library(leaflet.extras)
library(tidyverse)
library(shinythemes)
library(ggmap)
library(dplyr)
library(RColorBrewer)
library(viridis)
library(gridExtra)
load("../output/menu_nutrition_location_catagory.RData")
menu_clean <- menu_nutrition_location_catagory
subset_nutrition <-menu_clean %>%select(restaurant,menu)%>%unnest(menu)%>%
select(restaurant,Item_Name,Item_Description,Food_Category,Calories:Dietary_Fiber,Shareable)%>%
filter(Shareable==0)%>%select(-Potassium,-Shareable)%>%group_by(restaurant)%>%arrange(restaurant)%>%nest()%>%ungroup%>%mutate(restaurant_id=row_number())%>%group_by(restaurant)%>%unnest()%>%mutate(menu_id=row_number())%>%
select(restaurant_id,restaurant,menu_id,Item_Name,Item_Description,Food_Category,everything())
#colname<-subset_nutrition%>%colnames()
#nutrition<-colname[9:18]
#food_category<-subset_nutrition$Food_Category%>%unique()
subset_nutrition$Calories[which(is.na(subset_nutrition$Calories))] = 0
subset_nutrition$Total_Fat[which(is.na(subset_nutrition$Total_Fat))] = 0
subset_nutrition$Saturated_Fat[which(is.na(subset_nutrition$Saturated_Fat))] = 0
subset_nutrition$Trans_Fat[which(is.na(subset_nutrition$Trans_Fat))] = 0
subset_nutrition$Cholesterol[which(is.na(subset_nutrition$Cholesterol))] = 0
subset_nutrition$Sodium[which(is.na(subset_nutrition$Sodium))] = 0
subset_nutrition$Carbohydrates[which(is.na(subset_nutrition$Carbohydrates))] = 0
subset_nutrition$Protein[which(is.na(subset_nutrition$Protein))] = 0
subset_nutrition$Sugar[which(is.na(subset_nutrition$Sugar))] = 0
subset_nutrition$Dietary_Fiber[which(is.na(subset_nutrition$Dietary_Fiber))] = 0
new_col<-c("grey50", "blue","hotpink","Magenta","orange", "red","seagreen","violet","brown","maroon","navyblue", "yellow")
new_col<-rep("red",12)
p1 <- plot_ly(x = subset_nutrition$Food_Category,  y = subset_nutrition$Calories,color = subset_nutrition$Food_Category,colors = new_col, type = "box")%>%
layout(title = "Calories",
xaxis = list(title = ""),
yaxis = list(title = "Calories"),
showlegend=FALSE,
autosize = T)
protein_content<-subset_nutrition%>% select(restaurant,Food_Category,Protein)%>% group_by(Food_Category)%>%summarise(tprotein = sum(Protein))
p2 <-  plot_ly(
x = protein_content$tprotein,
y = protein_content$Food_Category,
marker = list(color = new_col),
type = "bar"
)
p3 <- plot_ly(x = subset_nutrition$Food_Category, y=subset_nutrition$Total_Fat,color = subset_nutrition$Food_Category,colors =new_col , type = "box") %>%
layout(title = "Total Fat",
xaxis = list(title = ""),
yaxis = list(title = ""),
showlegend=FALSE,
autosize = T)
cholesterol_content<-subset_nutrition%>% select(restaurant,Food_Category,Cholesterol)%>% group_by(Food_Category)%>%summarise(tcholesterol = sum(Cholesterol))
high_ch <- cholesterol_content%>%arrange(desc(tcholesterol))%>% head(6)
p5<-plot_ly(x= high_ch$Food_Category,y=high_ch$tcholesterol,
color = high_ch$food_category,type="bar")%>%layout(title="High Cholesterol Category",height=400)
low_ch <-cholesterol_content%>%arrange(desc(tcholesterol))%>% tail(6)
p6 <-plot_ly(x= low_ch$Food_Category,y=low_ch$tcholesterol,
color = low_ch$food_category,type="bar")%>%layout(title="Low Cholesterol Category",height=400)
carb_content<-subset_nutrition%>% select(restaurant,Food_Category,Carbohydrates)%>% group_by(restaurant)%>%summarise(tcarb = sum(Carbohydrates))
low_carb <- carb_content%>%arrange(desc(tcarb))%>%tail(26)
p7<-plot_ly(x= low_carb$restaurant,y=low_carb$tcarb,
color = low_carb$restaurant,type="bar")%>%layout(title="Carbohydrates content by Restaurant",height=400)
high_carb <- carb_content%>%arrange(desc(tcarb))%>%head(26)
p8<-plot_ly(x= high_carb$restaurant,y=high_carb$tcarb,
color = high_carb$restaurant,type="bar")%>%layout(title="Carbohydrates content by Restaurant",height=400)
sodium_content<-subset_nutrition%>% select(restaurant,Food_Category,Sodium)%>% group_by(restaurant)%>%summarise(tsodium = sum(Sodium))
low_sodium <- sodium_content%>%arrange(desc(tsodium))%>%head(26)
p9<-plot_ly(x= low_sodium$restaurant,y=low_sodium$tsodium,
color = low_sodium$restaurant,type="bar")%>%layout(title="Top low sodium Restaurants",height=400)
sodium_content1<-subset_nutrition%>% select(restaurant,Food_Category,Sodium)%>% group_by(restaurant)%>%summarise(tsodium1 = sum(Sodium))
high_sodium1 <- sodium_content1%>%arrange(desc(tsodium1))%>%head(26)
p10<-plot_ly(x= high_sodium1$restaurant,y=high_sodium1$tsodium1,
color = high_sodium1$restaurant,type="bar")%>%layout(title="Top High Sodium Restaurants",height=400)
sugar_content<-subset_nutrition%>% select(restaurant,Food_Category,Sugar)%>% group_by(Food_Category)%>%summarise(tsugar = sum(Sugar))
p11 <- plot_ly(
x = sugar_content$tsugar,
y = sugar_content$Food_Category,
marker = list(color = new_col),
type = "bar"
)
sugar_content<-subset_nutrition%>% select(restaurant,Food_Category,Sugar)%>% group_by(restaurant)%>%summarise(tsugar = sum(Sugar))
sugar_content
high_sugar <- sugar_content%>%arrange(desc(tsugar))%>%head(26)
p12<-plot_ly(x= high_sugar$restaurant,y=high_sugar$tsugar,
color = high_sugar$restaurant,type="bar")%>%layout(title="Top High Sugar Restaurants",height=400)
low_sugar <- sugar_content%>%arrange(desc(tsugar))%>%tail(26)
plow<-plot_ly(x= low_sugar$restaurant,y=low_sugar$tsugar,
color = low_sugar$restaurant,type="bar")%>%layout(title="Top low Sugar Restaurants",height=400)
p13 <- plot_ly(x = subset_nutrition$Food_Category, y=subset_nutrition$Dietary_Fiber,color = subset_nutrition$Food_Category,colors =new_col , type = "bar") %>% layout(
xaxis = list(title = ""),
yaxis = list(title = ""),
showlegend=FALSE,
autosize = T)
df_content<-subset_nutrition%>% select(restaurant,Food_Category,Dietary_Fiber)%>% group_by(restaurant)%>%summarise(tdf = sum(Dietary_Fiber))
high_df <- df_content%>%arrange(desc(tdf))%>%head(26)
p14<-plot_ly(x= high_df$restaurant,y=high_df$tdf,
color = high_df$restaurant,type="bar")%>%layout(title="Top High Dietary Fiber Restaurants",height=400)
save(p1,p2,p3,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,plow,file = "../output/data_statistics.RData")
runApp('~/GitHub/Spring2020-Project2-group-8/hanbojiao/test')
runApp('~/GitHub/Spring2020-Project2-group-8/hanbojiao/test')
runApp('~/GitHub/Spring2020-Project2-group-8/hanbojiao/test')
runApp('~/GitHub/Spring2020-Project2-group-8/hanbojiao/test')
runApp('~/GitHub/Spring2020-Project2-group-8/hanbojiao/test')
runApp('~/GitHub/Spring2020-Project2-group-8/hanbojiao/test')
runApp('~/GitHub/Spring2020-Project2-group-8/hanbojiao/test')
runApp('~/GitHub/Spring2020-Project2-group-8/hanbojiao/test')
runApp('~/GitHub/Spring2020-Project2-group-8/hanbojiao/test')
runApp('~/GitHub/Spring2020-Project2-group-8/hanbojiao/test')
runApp('~/GitHub/Spring2020-Project2-group-8/hanbojiao/test')
runApp('~/GitHub/Spring2020-Project2-group-8/hanbojiao/test')
runApp('~/GitHub/Spring2020-Project2-group-8/hanbojiao/test')
runApp('~/GitHub/Spring2020-Project2-group-8/hanbojiao/test')
runApp()
runApp('~/GitHub/Spring2020-Project2-group-8/hanbojiao/test')
runApp('~/GitHub/Spring2020-Project2-group-8/hanbojiao/test')
packages.used=c("shiny", "leaflet","plotly","sodium_contenta.table","shinyWidgets","googleVis","geosphere","leaflet.extras","shinythemes","ggmap","dplyr","‘RColorBrewer","viridis","gridextra")
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
library(shiny)
library(leaflet)
library(plotly)
library(shinyWidgets)
library(googleVis)
library(geosphere)
library(leaflet.extras)
library(tidyverse)
library(shinythemes)
library(ggmap)
library(dplyr)
library(RColorBrewer)
library(viridis)
library(gridExtra)
load("../output/menu_nutrition_location_catagory.RData")
menu_clean <- menu_nutrition_location_catagory
subset_nutrition <-menu_clean %>%select(restaurant,menu)%>%unnest(menu)%>%
select(restaurant,Item_Name,Item_Description,Food_Category,Calories:Dietary_Fiber,Shareable)%>%
filter(Shareable==0)%>%select(-Potassium,-Shareable)%>%group_by(restaurant)%>%arrange(restaurant)%>%nest()%>%ungroup%>%mutate(restaurant_id=row_number())%>%group_by(restaurant)%>%unnest()%>%mutate(menu_id=row_number())%>%
select(restaurant_id,restaurant,menu_id,Item_Name,Item_Description,Food_Category,everything())
#colname<-subset_nutrition%>%colnames()
#nutrition<-colname[9:18]
#food_category<-subset_nutrition$Food_Category%>%unique()
subset_nutrition$Calories[which(is.na(subset_nutrition$Calories))] = 0
subset_nutrition$Total_Fat[which(is.na(subset_nutrition$Total_Fat))] = 0
subset_nutrition$Saturated_Fat[which(is.na(subset_nutrition$Saturated_Fat))] = 0
subset_nutrition$Trans_Fat[which(is.na(subset_nutrition$Trans_Fat))] = 0
subset_nutrition$Cholesterol[which(is.na(subset_nutrition$Cholesterol))] = 0
subset_nutrition$Sodium[which(is.na(subset_nutrition$Sodium))] = 0
subset_nutrition$Carbohydrates[which(is.na(subset_nutrition$Carbohydrates))] = 0
subset_nutrition$Protein[which(is.na(subset_nutrition$Protein))] = 0
subset_nutrition$Sugar[which(is.na(subset_nutrition$Sugar))] = 0
subset_nutrition$Dietary_Fiber[which(is.na(subset_nutrition$Dietary_Fiber))] = 0
new_col<-c("grey50", "blue","hotpink","Magenta","orange", "red","seagreen","violet","brown","maroon","navyblue", "yellow")
p1 <- plot_ly(x = subset_nutrition$Food_Category,  y = subset_nutrition$Calories,color = subset_nutrition$Food_Category,colors = new_col, type = "box")%>%
layout(title = "Calories",
xaxis = list(title = ""),
yaxis = list(title = "Calories"),
showlegend=FALSE,
autosize = T)
protein_content<-subset_nutrition%>% select(restaurant,Food_Category,Protein)%>% group_by(Food_Category)%>%summarise(tprotein = sum(Protein))
p2 <-  plot_ly(
x = protein_content$tprotein,
y = protein_content$Food_Category,
marker = list(color = new_col),
type = "bar"
)
p3 <- plot_ly(x = subset_nutrition$Food_Category, y=subset_nutrition$Total_Fat,color = subset_nutrition$Food_Category,colors =new_col , type = "box") %>%
layout(title = "Total Fat",
xaxis = list(title = ""),
yaxis = list(title = ""),
showlegend=FALSE,
autosize = T)
cholesterol_content<-subset_nutrition%>% select(restaurant,Food_Category,Cholesterol)%>% group_by(Food_Category)%>%summarise(tcholesterol = sum(Cholesterol))
high_ch <- cholesterol_content%>%arrange(desc(tcholesterol))%>% head(6)
p5<-plot_ly(x= high_ch$Food_Category,y=high_ch$tcholesterol,
color = high_ch$food_category,type="bar")%>%layout(title="High Cholesterol Category",height=400)
low_ch <-cholesterol_content%>%arrange(desc(tcholesterol))%>% tail(6)
p6 <-plot_ly(x= low_ch$Food_Category,y=low_ch$tcholesterol,
color = low_ch$food_category,type="bar")%>%layout(title="Low Cholesterol Category",height=400)
carb_content<-subset_nutrition%>% select(restaurant,Food_Category,Carbohydrates)%>% group_by(restaurant)%>%summarise(tcarb = sum(Carbohydrates))
low_carb <- carb_content%>%arrange(desc(tcarb))%>%tail(26)
p7<-plot_ly(x= low_carb$restaurant,y=low_carb$tcarb,
color = low_carb$restaurant,type="bar")%>%layout(title="Carbohydrates content by Restaurant",height=400)
high_carb <- carb_content%>%arrange(desc(tcarb))%>%head(26)
p8<-plot_ly(x= high_carb$restaurant,y=high_carb$tcarb,
color = high_carb$restaurant,type="bar")%>%layout(title="Carbohydrates content by Restaurant",height=400)
sodium_content<-subset_nutrition%>% select(restaurant,Food_Category,Sodium)%>% group_by(restaurant)%>%summarise(tsodium = sum(Sodium))
low_sodium <- sodium_content%>%arrange(desc(tsodium))%>%head(26)
p9<-plot_ly(x= low_sodium$restaurant,y=low_sodium$tsodium,
color = low_sodium$restaurant,type="bar")%>%layout(title="Top low sodium Restaurants",height=400)
sodium_content1<-subset_nutrition%>% select(restaurant,Food_Category,Sodium)%>% group_by(restaurant)%>%summarise(tsodium1 = sum(Sodium))
high_sodium1 <- sodium_content1%>%arrange(desc(tsodium1))%>%head(26)
p10<-plot_ly(x= high_sodium1$restaurant,y=high_sodium1$tsodium1,
color = high_sodium1$restaurant,type="bar")%>%layout(title="Top High Sodium Restaurants",height=400)
sugar_content<-subset_nutrition%>% select(restaurant,Food_Category,Sugar)%>% group_by(Food_Category)%>%summarise(tsugar = sum(Sugar))
p11 <- plot_ly(
x = sugar_content$tsugar,
y = sugar_content$Food_Category,
marker = list(color = new_col),
type = "bar"
)
sugar_content<-subset_nutrition%>% select(restaurant,Food_Category,Sugar)%>% group_by(restaurant)%>%summarise(tsugar = sum(Sugar))
high_sugar <- sugar_content%>%arrange(desc(tsugar))%>%head(26)
p12<-plot_ly(x= high_sugar$restaurant,y=high_sugar$tsugar,
color = high_sugar$restaurant,type="bar")%>%layout(title="Top High Sugar Restaurants",height=400)
low_sugar <- sugar_content%>%arrange(desc(tsugar))%>%tail(26)
plow<-plot_ly(x= low_sugar$restaurant,y=low_sugar$tsugar,
color = low_sugar$restaurant,type="bar")%>%layout(title="Top low Sugar Restaurants",height=400)
p13 <- plot_ly(x = subset_nutrition$Food_Category, y=subset_nutrition$Dietary_Fiber,color = subset_nutrition$Food_Category,colors =new_col , type = "bar") %>% layout(
xaxis = list(title = ""),
yaxis = list(title = ""),
showlegend=FALSE,
autosize = T)
df_content<-subset_nutrition%>% select(restaurant,Food_Category,Dietary_Fiber)%>% group_by(restaurant)%>%summarise(tdf = sum(Dietary_Fiber))
high_df <- df_content%>%arrange(desc(tdf))%>%head(26)
p14<-plot_ly(x= high_df$restaurant,y=high_df$tdf,
color = high_df$restaurant,type="bar")%>%layout(title="Top High Dietary Fiber Restaurants",height=400)
save(p1,p2,p3,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,plow,file = "../output/data_statistics.RData")
runApp('~/GitHub/Spring2020-Project2-group-8/hanbojiao/test')
runApp('~/GitHub/Spring2020-Project2-group-8/hanbojiao/test')
runApp('~/GitHub/Spring2020-Project2-group-8/hanbojiao/test')
runApp('zq project2 ui')
load("C:/Users/jiaoh/OneDrive/桌面/zq project2 ui/res_type_zip.Rdata")
load("C:/Users/jiaoh/OneDrive/桌面/zq project2 ui/mat.RData")
load("C:/Users/jiaoh/OneDrive/桌面/zq project2 ui/indexv3.RData")
load("C:/Users/jiaoh/OneDrive/桌面/zq project2 ui/Index_standard.RData")
load("C:/Users/jiaoh/OneDrive/桌面/zq project2 ui/index.RData")
load("C:/Users/jiaoh/OneDrive/桌面/zq project2 ui/Data.RData")
runApp('zq project2 ui')
load("C:/Users/jiaoh/OneDrive/桌面/zq project2 ui/res_type_zip.Rdata")
load("C:/Users/jiaoh/OneDrive/桌面/zq project2 ui/filter_type.RData")
runApp('zq project2 ui')
library(d3heatmap)
runApp('zq project2 ui')
runApp('zq project2 ui')
runApp()
runApp('zq project2 ui')
runApp('zq project2 ui')
runApp('zq project2 ui')
runApp('zq project2 ui')
runApp('zq project2 ui')
runApp('~/GitHub/Spring2020-Project2-group-8/hanbojiao/test')
runApp('~/GitHub/Spring2020-Project2-group-8/hanbojiao/test')
shiny::runApp()
runApp('~/GitHub/Spring2020-Project2-group-8/app')
runApp('~/GitHub/Spring2020-Project2-group-8/app')
runApp('~/GitHub/Spring2020-Project2-group-8/app')
runApp('~/GitHub/Spring2020-Project2-group-8/app')
runApp('~/GitHub/Spring2020-Project2-group-8/app')
"Choose Second Nutrition Fact:"
"Choose Second \n  Nutrition Fact:"
"Choose Second \  Nutrition Fact:"
"Choose Second \N  Nutrition Fact:"
"Choose Second \n  Nutrition Fact:"
