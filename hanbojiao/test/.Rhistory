names(x)
x %>% mutate(sumNuitrition = rowSums(.[9:18],na.rm = T))%>%
mutate(Calories_ratio=Calories/sumNuitrition,
Total_Fat_ratio=Total_Fat/sumNuitrition,
Saturated_Fat_ratio=Saturated_Fat/sumNuitrition,
Trans_Fat_ratio=Trans_Fat/sumNuitrition,
Cholesterol_ratio=Cholesterol/sumNuitrition,
Sodium_ratio=Sodium/sumNuitrition,
Carbohydrates_ratio=Carbohydrates/sumNuitrition,
Protein_ratio=Protein/sumNuitrition,
Sugar_ratio=Sugar/sumNuitrition,
Dietary_Fiber_ratio=Dietary_Fiber/sumNuitrition)
x
x
x%>%pivot_longer()
x%>%    mutate(Calories_ratio=Calories/sumNuitrition,
Total_Fat_ratio=Total_Fat/sumNuitrition,
Saturated_Fat_ratio=Saturated_Fat/sumNuitrition,
Trans_Fat_ratio=Trans_Fat/sumNuitrition,
Cholesterol_ratio=Cholesterol/sumNuitrition,
Sodium_ratio=Sodium/sumNuitrition,
Carbohydrates_ratio=Carbohydrates/sumNuitrition,
Protein_ratio=Protein/sumNuitrition,
Sugar_ratio=Sugar/sumNuitrition,
Dietary_Fiber_ratio=Dietary_Fiber/sumNuitrition)
x
x<-%>% mutate(sumNuitrition = rowSums(.[9:18],na.rm = T))%>%
mutate(Calories_ratio=Calories/sumNuitrition,
Total_Fat_ratio=Total_Fat/sumNuitrition,
Saturated_Fat_ratio=Saturated_Fat/sumNuitrition,
Trans_Fat_ratio=Trans_Fat/sumNuitrition,
Cholesterol_ratio=Cholesterol/sumNuitrition,
Sodium_ratio=Sodium/sumNuitrition,
Carbohydrates_ratio=Carbohydrates/sumNuitrition,
Protein_ratio=Protein/sumNuitrition,
Sugar_ratio=Sugar/sumNuitrition,
Dietary_Fiber_ratio=Dietary_Fiber/sumNuitrition)
x
x<-x%>% mutate(sumNuitrition = rowSums(.[9:18],na.rm = T)
x<-x%>% mutate(sumNuitrition = rowSums(.[9:18],na.rm = T))
x
x%>%
mutate(Calories_ratio=Calories/sumNuitrition,
Total_Fat_ratio=Total_Fat/sumNuitrition,
Saturated_Fat_ratio=Saturated_Fat/sumNuitrition,
Trans_Fat_ratio=Trans_Fat/sumNuitrition,
Cholesterol_ratio=Cholesterol/sumNuitrition,
Sodium_ratio=Sodium/sumNuitrition,
Carbohydrates_ratio=Carbohydrates/sumNuitrition,
Protein_ratio=Protein/sumNuitrition,
Sugar_ratio=Sugar/sumNuitrition,
Dietary_Fiber_ratio=Dietary_Fiber/sumNuitrition)
x%>% mutate(sumNuitrition = rowSums(.[9:18],na.rm = T))%>%
mutate(Calories_ratio=Calories/sumNuitrition,
Total_Fat_ratio=Total_Fat/sumNuitrition,
Saturated_Fat_ratio=Saturated_Fat/sumNuitrition,
Trans_Fat_ratio=Trans_Fat/sumNuitrition,
Cholesterol_ratio=Cholesterol/sumNuitrition,
Sodium_ratio=Sodium/sumNuitrition,
Carbohydrates_ratio=Carbohydrates/sumNuitrition,
Protein_ratio=Protein/sumNuitrition,
Sugar_ratio=Sugar/sumNuitrition,
Dietary_Fiber_ratio=Dietary_Fiber/sumNuitrition)
x<-%>% mutate(sumNuitrition = rowSums(.[9:18],na.rm = T))%>%
mutate(Calories_ratio=Calories/sumNuitrition,
Total_Fat_ratio=Total_Fat/sumNuitrition,
Saturated_Fat_ratio=Saturated_Fat/sumNuitrition,
Trans_Fat_ratio=Trans_Fat/sumNuitrition,
Cholesterol_ratio=Cholesterol/sumNuitrition,
Sodium_ratio=Sodium/sumNuitrition,
Carbohydrates_ratio=Carbohydrates/sumNuitrition,
Protein_ratio=Protein/sumNuitrition,
Sugar_ratio=Sugar/sumNuitrition,
Dietary_Fiber_ratio=Dietary_Fiber/sumNuitrition)
x<-x%>% mutate(sumNuitrition = rowSums(.[9:18],na.rm = T))%>%
mutate(Calories_ratio=Calories/sumNuitrition,
Total_Fat_ratio=Total_Fat/sumNuitrition,
Saturated_Fat_ratio=Saturated_Fat/sumNuitrition,
Trans_Fat_ratio=Trans_Fat/sumNuitrition,
Cholesterol_ratio=Cholesterol/sumNuitrition,
Sodium_ratio=Sodium/sumNuitrition,
Carbohydrates_ratio=Carbohydrates/sumNuitrition,
Protein_ratio=Protein/sumNuitrition,
Sugar_ratio=Sugar/sumNuitrition,
Dietary_Fiber_ratio=Dietary_Fiber/sumNuitrition)
x
x%>%ungroup%>%select(Calories:Dietary_Fiber)
x%>%ungroup%>%select(meui_id,Calories:Dietary_Fiber)
x%>%ungroup%>%select(menu_id,Item_Name,Calories:Dietary_Fiber)
data_comparison%>%head(10)->x
x
x<-x%>%ungroup()%>%head(10)%>%mutate(menu_id=row_number())
x
x<-x%>%filter(menu_id%in%menu)
x
x%>%pivot_longer(Calories:Dietary_Fiber,"nutrition","value")
x%>%pivot_longer(Calories:Dietary_Fiber,"nutrition","value")%>%ggplot(aes(x="",y="value",fill="nutrition"))+geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)+facet_wrap(menu_id)
x%>%pivot_longer(Calories:Dietary_Fiber,"nutrition","value")%>%ggplot(aes(x="",y="value",fill="nutrition"))+geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
x<-x%>%pivot_longer(Calories:Dietary_Fiber,"nutrition","value")
x%>%ggplot(aes(x="",y="value",fill="nutrition"))
x%>%ggplot(aes(x="",y="value",fill="nutrition"))++geom_bar(stat="identity", width=1)
x%>%ggplot(aes(x="",y="value",fill="nutrition"))+geom_bar(stat="identity", width=1)
x
x%>%select(nutrition,value)
x%>%ggplot(aes(x="",y="value",fill=nutrition))+geom_bar(stat="identity", width=1)
x%>%ggplot(aes(x="",y="value",fill=nutrition))+geom_bar(stat="identity", width=1)+coord_polar("y", start=0)+facet_wrap(menu_id)
x%>%ggplot(aes(x="",y="value",fill=nutrition))+geom_bar(stat="identity", width=1)+coord_polar("y", start=0)
x
x%>%ggplot(aes(x="",y="value",fill=nutrition))+geom_bar(stat="identity", width=1)+coord_polar("y", start=0)+facet_wrap(menu_id)
x%>%ggplot(aes(x="",y="value",fill=nutrition,col=menu_id))+geom_bar(stat="identity", width=1)+coord_polar("y", start=0)+facet_wrap(menu_id)
x%>%ggplot(aes(x="",y="value",fill=menu_id,col=menu_id))+geom_bar(stat="identity", width=1)+coord_polar("y", start=0)+facet_wrap(menu_id)
x%>%ggplot(aes(x="",y="value",fill=menu_id,col=menu_id))+geom_bar(stat="identity", width=1)+coord_polar("y", start=0)
x%>%ggplot(aes(x="",y="value",fill=nutrition))+geom_bar(stat="identity", width=1)+coord_polar("y", start=0)
x%>%ggplot(aes(x="",y="value",fill=menu_id,col=menu_id))+geom_bar(stat="identity", width=1)+coord_polar("y", start=0)+facet_wrap(~menu_id)
x%>%ggplot(aes(x="",y="value",fill=nutrition))+geom_bar(stat="identity", width=1)+coord_polar("y", start=0)+facet_wrap(~menu_id)
x
x%>% mutate_at(Serving_Size:Serving_Size_Unit,x = ~replace_na(.x, 0))
x%>% mutate_at(c(Serving_Size:Serving_Size_Unit),x = ~replace_na(.x, 0))
x%>% mutate_at(Serving_Size,x = ~replace_na(.x, 0))
x
x%>% mutate_at(Serving_Size, ~replace_na(.x, 0))
x%>% mutate_at(c("Serving_Size"), ~replace_na(.x, 0))
x%>% mutate_at(c("Serving_Size":"Serving_Size_Unit"), ~replace_na(.x, 0))
x%>% mutate_at(c("Serving_Size":"Serving_Size_Units"), ~replace_na(.x, 0))
x%>% mutate_at(c("Serving_Size","Serving_Size_Units"), ~replace_na(.x, 0))
x%>% mutate_at(c("Serving_Size","Serving_Size_Unit"), ~replace_na(.x, 0))
names(x%>% mutate_at(c("Serving_Size","Serving_Size_Unit"), ~replace_na(.x, 0)))
names(x)
x
xx%>% mutate(nutrition=replace_na(nutrition, 0))->x
x%>% mutate(nutrition=replace_na(nutrition, 0))->x
x
x%>%ggplot(aes(x="",y="value",fill=nutrition))+geom_bar(stat="identity", width=1)+coord_polar("y", start=0)+facet_wrap(~menu_id)
x%>% mutate(nutrition=replace_na(value, 0))->x
x
x%>%select(nutrition,value)
x<-data_comparison%>%head(10)
x
x%>%ungroup()%>%filter(menu_id%in%input$menuid1)%>%pivot_longer(Calories:Dietary_Fiber,"nutrition","value")%>% mutate(nutrition=replace_na(value, 0))->x
x
x%>%ungroup()%>%filter(menu_id%in%menu)%>%pivot_longer(Calories:Dietary_Fiber,"nutrition","value")%>% mutate(nutrition=replace_na(value, 0))->x
x
x%>%select(nutrition,value)
x<-data_comparison%>%head(10)
x%>%ungroup()%>%filter(menu_id%in%menu)%>%pivot_longer(Calories:Dietary_Fiber,"nutrition","value")%>% mutate(value=replace_na(value, 0))->x
x
x%>%select(nutrition,value)
x%>%ggplot(aes(x="",y="value",fill=nutrition))+geom_bar(stat="identity", width=1)+coord_polar("y", start=0)+facet_wrap(~menu_id)
x%>%filter(menu_id=1)->y
y
x%>%filter(menu_id==1)->y
y
y%>%select(nutrition,value)
y%>%ggplot(aes(x="",y="value",fill=nutrition))+geom_bar(stat="identity", width=1)+coord_polar("y", start=0)
data <- data.frame(
group=LETTERS[1:5],
value=c(13,7,9,21,2)
)
data
ggplot(data, aes(x="", y=value, fill=group)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
y%>%ggplot(aes(x="",y=value,fill=nutrition))+geom_bar(stat="identity", width=1)+coord_polar("y", start=0)
x%>%ggplot(aes(x="",y=value,fill=nutrition))+geom_bar(stat="identity", width=1)+coord_polar("y", start=0)+facet_wrap(~menu_id)
x%>%filter(menu_id==5)->y
y%>%select(nutrition,value)
yggplot(aes(x="",y=value,fill=nutrition))+geom_bar(stat="identity", width=1)+coord_polar("y", start=0)
y%>%ggplot(aes(x="",y=value,fill=nutrition))+geom_bar(stat="identity", width=1)+coord_polar("y", start=0)
y
x
x%>%ggplot(aes(x="",y=value,fill=nutrition))+geom_bar(stat="identity", width=1)+coord_polar("y", start=0)+facet_wrap(~menu_id,scales = "free.x")
x%>%ggplot(aes(x="",y=value,fill=nutrition))+geom_bar(stat="identity", width=1)+coord_polar("y", start=0)+facet_wrap(~menu_id,scales = "free_x")
x%>%ggplot(aes(x="",y=value,fill=nutrition))+geom_bar(stat="identity", width=1)+coord_polar("y", start=0)
x%>%ggplot(aes(x="",y=value,fill=nutrition))+geom_bar(stat="identity", width=1)+coord_polar("y", start=0)+facet_wrap(~menu_id,scales = "free_x")
x%>%ggplot(aes(x="",y=value,fill=nutrition))+geom_bar(stat="identity", width=1)+coord_polar("y", start=0)+facet_wrap(~menu_id,scales = "free")
x%>%ggplot(aes(x="",y=value,fill=nutrition))+geom_bar(stat="identity", width=1)+coord_polar("y", start=0)+facet_wrap(~menu_id)+ theme(aspect.ratio = 1)
x%>%ggplot(aes(x="",y=value,fill=nutrition))+geom_bar(stat="identity", width=1)+coord_polar("y", start=0)+facet_wrap(~menu_id,scales = "free_x")
x%>%ggplot(aes(x="",y=value,fill=nutrition))+geom_bar(stat="identity", width=1)+coord_polar("y", start=0)+facet_wrap(~menu_id)
cp <- coord_polar(theta = "y")
cp$is_free <- function() TRUE
ggplot(mpg, aes(x = 1, fill = drv)) +
geom_bar() +
cp +
facet_wrap(~manufacturer, scales = "free") +
theme(aspect.ratio = 1)
ggplot(mpg, aes(x = 1, fill = drv)) +
geom_bar() +facet_wrap(~manufacturer, scales = "free") +
theme(aspect.ratio = 1)
x%>%ggplot(aes(x="",y=value,fill=nutrition))+facet_wrap(~menu_id)+geom_bar(stat="identity", width=1)+coord_polar("y", start=0)
x%>%ggplot(aes(x=factor(1),fill=factor(value)))+facet_wrap(~menu_id)+geom_bar( width=1,position = "fill")+coord_polar("y", start=0)
ggplot(mtcars,aes(x = factor(1),fill=factor(cyl))) +
facet_wrap(~gear) +
geom_bar(width = 1,position = "fill") +
coord_polar(theta="y")
x%>%ggplot(aes(x=factor(1),fill=factor(value)))+facet_wrap(~menu_id)+geom_bar( width=1,position = "fill")+coord_polar("y", start=0)
x%>%ggplot(aes(x=factor(1),fill=factor(nutrition)))+facet_wrap(~menu_id)+geom_bar( width=1,position = "fill")+coord_polar("y", start=0)
mtcars$cyl[1:10]
cp <- coord_polar(theta = "y")
cp$is_free <- function() TRUE
x
x%>%ggplot(aes(x=factor(1),y=value  ,fill=factor(nutrition)))
x%>%ggplot(aes(x=factor(1),y=value  ,fill=factor(nutrition)))+facet_wrap(~menu_id)+geom_bar( width=1,position = "fill")+coord_polar("y", start=0)
x%>%ggplot(aes(x=factor(1),y=value  ,fill=factor(nutrition)))+facet_wrap(~menu_id)+geom_bar( width=1,position = "fill")
x%>%ggplot(aes(x=factor(1),y=value  ,fill=factor(nutrition)))+facet_wrap(~menu_id)+geom_bar( width=1)
x%>%ggplot(aes(x=factor(1),y=value  ,fill=factor(nutrition)))+facet_wrap(~menu_id)+geom_bar("identity" width=1)
x%>%ggplot(aes(x=factor(1),y=value  ,fill=factor(nutrition)))+facet_wrap(~menu_id)+geom_bar("identity", width=1)
x%>%ggplot(aes(x=factor(1),y=value  ,fill=factor(nutrition)))+facet_wrap(~menu_id)+geom_bar(stat = "identity", width=1)
x%>%ggplot(aes(x=factor(1),y=value  ,fill=factor(nutrition)))+facet_wrap(~menu_id,scales = "free")+geom_bar(stat = "identity", width=1)
x%>%ggplot(aes(x=factor(1),y=value  ,fill=factor(nutrition)))+facet_wrap(~menu_id,scales = "free")+geom_bar(stat = "identity", width=1)+coord_polar("y", start=0)
x%>%ggplot(aes(x=factor(1),y=value  ,fill=factor(nutrition)))+facet_wrap(~menu_id,scales = "free")+geom_bar(stat = "identity", width=1)
x%>%ggplot(aes(x=factor(1),y=value  ,fill=factor(nutrition)))+facet_wrap(~menu_id,scales = "free")+geom_bar(stat = "identity", width=1)
x%>%ggplot(aes(x=factor(1),y=value  ,fill=factor(nutrition)))+facet_wrap(~menu_id,scales = "free")+geom_bar(stat = "identity", width=1)+coord_polar("y")
x%>%ggplot(aes(x=factor(1),y=value  ,fill=factor(nutrition)))+facet_wrap(~menu_id,scales = "free")+geom_bar(stat = "identity", width=1)
cp <- coord_polar(theta = "y")
cp$is_free <- function() TRUE
x%>%ggplot(aes(x=factor(1),y=value  ,fill=factor(nutrition)))+facet_wrap(~menu_id,scales = "free")+geom_bar(stat = "identity", width=1)+cp
x%>%ggplot(aes(x=factor(1),y=value  ,fill=factor(nutrition)))+facet_wrap(~menu_id)+geom_bar(stat = "identity", width=1)+cp
x%>%ggplot(aes(x=factor(1),y=value  ,fill=factor(nutrition)))+facet_wrap(~menu_id,scales = "free")+geom_bar(stat = "identity", width=1)+cp
x%>%ggplot(aes(x=factor(1),y=value  ,fill=factor(nutrition)))+facet_wrap(~menu_id,scales = "free")+geom_bar(stat = "identity", width=1)+cp+theme_void()
x%>%ggplot(aes(x=factor(1),y=value  ,fill=factor(nutrition)))+facet_wrap(~menu_id,scales = "free",nrow = 1)+geom_bar(stat = "identity", width=1)+cp+theme_void()
x%>%ggplot(aes(x=factor(1),y=value  ,fill=factor(nutrition)))+facet_wrap(~menu_id,scales = "free",ncol = 1)+geom_bar(stat = "identity", width=1)+cp+theme_void()
runApp()
runApp()
runApp()
runApp()
runApp()
#resx_name
res_name<-function(input_restaurants,k){
return(input_restaurants[[k]])
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
is_null(NULL)
is_null(input.menuid3)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shiny)
library(DT)
ui <- fluidPage(
verbatimTextOutput(outputId = 'vb'),
dataTableOutput(outputId = 'table')
)
server <- function(input, output, session) {
yourData <- reactive({
return(mtcars)
})
output$vb <- renderPrint({
req(input$table_rows_selected, cancelOutput = TRUE)
row_id <- input$table_rows_selected
row_selected <- yourData()[row_id,]
return(row_selected)
})
output$table <- renderDataTable({
datatable(
data = yourData(),
selection = 'single'
)
})
}
shinyApp(ui, server)
library(shiny)
library(DT)
ui <- fluidPage(
verbatimTextOutput(outputId = 'vb'),
dataTableOutput(outputId = 'table')
)
server <- function(input, output, session) {
yourData <- reactive({
return(mtcars)
})
output$vb <- renderPrint({
req(input$table_rows_selected, cancelOutput = TRUE)
row_id <- input$table_rows_selected
row_selected <- yourData()[row_id,]
return(row_selected)
})
output$table <- renderDataTable({
datatable(
data = yourData(),
selection = 'multiple'
)
})
}
shinyApp(ui, server)
runApp()
nutrition
nutrition[-1]
runApp()
runApp()
View(data_comparison)
names(data_comparison)
runApp()
View(data_comparison)
runApp()
runApp()
nutrition
nutrition
nutrition%>%names()
nutrition[-1]%>%names()
runApp()
runApp()
runApp()
runApp()
req(input$table_rows_selected, cancelOutput = F)
library(shiny)
library(DT)
ui <- fluidPage(
verbatimTextOutput(outputId = 'vb'),
dataTableOutput(outputId = 'table')
)
server <- function(input, output, session) {
yourData <- reactive({
return(mtcars)
})
output$vb <- renderPrint({
req(input$table_rows_selected, cancelOutput = F)
row_id <- input$table_rows_selected
row_selected <- yourData()[row_id,]
return(row_selected)
})
output$table <- renderDataTable({
datatable(
data = yourData(),
selection = 'multiple'
)
})
}
shinyApp(ui, server)
runApp()
runApp()
runApp()
View(data_comparison)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
View(data_comparison)
data_comparison->
x
x%>%sort
x
x%>%select(restaurant_id)%>%sort()
load("C:/Users/jiaoh/OneDrive/桌面/zq project2 ui/Data.RData")
load("C:/Users/jiaoh/OneDrive/桌面/zq project2 ui/index.RData")
load("C:/Users/jiaoh/OneDrive/桌面/zq project2 ui/Index_standard.RData")
library(shiny)
shinyUI(
div(id="house",
navbarPage(strong("Manhattan House Finder",style="color: white;"),
theme=shinytheme("flatly"),
#theme = "bootstrap.min.css",
#theme="styles.css",
tabPanel("Intro",
mainPanel(width=12,
setBackgroundImage(
src = "../background_1.jpg"
),
style = "color: white",
h2("Are Children Safe During After-school Activities?"),
h3("News:"),
h3("Dulce Maria Alavez, A 5-Year-Old Girl Went Missing From a Playground in New Jersey"),
p("Dulce went missing on the afternoon of Sept.
16 while her mother in the car with the 8-year-old son, roughly 30 yards away. The mother is still seeking
for information about her daughter two weeks after the girl is believed to have been abducted from a local park."),
p(em(a("New York Times",href="https://www.nytimes.com/2019/10/01/nyregion/missing-child-nj-dulce-alavez.html"))),
h2("Are Children Safe During After-school Activities?"),
p("Diego, a boy who was critically injured last week after being sucker-punched at school
in an assault captured on video died Tuesday night. Diego appears to hit his head on a concrete.He died after sending
to the hospital in a extremely critical condition.
"),
p(em(a("Los Angeles Times",href="https://www.latimes.com/california/story/2019-09-25/boy-sucker-punched-moreno-valley-school-dies-from-injuries"))),
h2("Are Children Safe During After-school Activities?"),
p("Developing an App that relates the crimes related to kids or teenagers with places where children spend the most, for instance, after-school activities spots. Inspired by how the Amber Alarm works, We want to develop visualization and give children warnings of certain areas even before they are in danger.
"),
p(),
p(em(a("Github link",href="https://github.com/TZstatsADS/fall2019-proj2--sec2-grp8"))),
div(class="footer", "Group Project by Lihao Xiao, Dingyi Fang, Mo Yang, Thomson Batidzirai, Sixuan Li")
)),
tabPanel("Map",
div(class="outer",
leafletOutput("map",width="100%",height=700),
absolutePanel(id = "control", class = "panel panel-default", fixed = TRUE, draggable = TRUE,
top = 170, left = 20, right = "auto", bottom = "auto", width = 320, height = "auto",
useShinyjs(),
##Possible to change to subway station and bus station
checkboxGroupInput("enable_markers", "Traffic:",
choices = c("Bus Station","Subway Station"),
selected = c("Subway Station")),
checkboxGroupInput("click_neighbourhood", "Neighbourhood",
choices =c("Crime","Noise","Park","Restaurant","Retail","School"), selected =c()),
sliderInput("click_radius", "Radius of area around  the selected address", min=50, max=500, value=250, step=10),
style = "opacity: 0.80"
),
#the panel on the right to show the statistics
absolutePanel(id = "Statistics", class = "panel panel-default", fixed= TRUE, draggable = TRUE,
top = 90, left = "auto", right = 20, bottom = "auto", width = 320, height = "auto",
style = "overflow-y:scroll;height:500px;max-height:550px",
useShinyjs(),
h3("Summary of Chosen Area"),
h4("The Geographical Information"),
p(textOutput("click_coord")),
h4("Average House Price/Square Feet"),
p(strong(textOutput("click_avg_price_red", inline = T))),
tags$head(tags$style("#click_avg_price_red{color: red;
font-size: 20px;
font-style: italic;
}"
)
),
p(strong(textOutput("click_avg_price_orange", inline = T))),
tags$head(tags$style("#click_avg_price_orange{color: orange;
font-size: 20px;
font-style: italic;
}"
)
shiny::runApp()
runApp()
nutrition<-c("Select",nutrition)
runApp()
runApp()
runApp()
runApp()
runApp()
