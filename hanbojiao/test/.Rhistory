server <- function(input, output, session) {
yourData <- reactive({
return(mtcars)
})
output$vb <- renderPrint({
req(input$table_rows_selected, cancelOutput = TRUE)
row_id <- input$table_rows_selected
row_selected <- yourData()[row_id,]
return(row_selected)
})
output$table <- renderDataTable({
datatable(
data = yourData(),
selection = 'single'
)
})
}
shinyApp(ui, server)
library(shiny)
library(DT)
ui <- fluidPage(
verbatimTextOutput(outputId = 'vb'),
dataTableOutput(outputId = 'table')
)
server <- function(input, output, session) {
yourData <- reactive({
return(mtcars)
})
output$vb <- renderPrint({
req(input$table_rows_selected, cancelOutput = TRUE)
row_id <- input$table_rows_selected
row_selected <- yourData()[row_id,]
return(row_selected)
})
output$table <- renderDataTable({
datatable(
data = yourData(),
selection = 'multiple'
)
})
}
shinyApp(ui, server)
runApp()
nutrition
nutrition[-1]
runApp()
runApp()
View(data_comparison)
names(data_comparison)
runApp()
View(data_comparison)
runApp()
runApp()
nutrition
nutrition
nutrition%>%names()
nutrition[-1]%>%names()
runApp()
runApp()
runApp()
runApp()
req(input$table_rows_selected, cancelOutput = F)
library(shiny)
library(DT)
ui <- fluidPage(
verbatimTextOutput(outputId = 'vb'),
dataTableOutput(outputId = 'table')
)
server <- function(input, output, session) {
yourData <- reactive({
return(mtcars)
})
output$vb <- renderPrint({
req(input$table_rows_selected, cancelOutput = F)
row_id <- input$table_rows_selected
row_selected <- yourData()[row_id,]
return(row_selected)
})
output$table <- renderDataTable({
datatable(
data = yourData(),
selection = 'multiple'
)
})
}
shinyApp(ui, server)
runApp()
runApp()
runApp()
View(data_comparison)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
View(data_comparison)
data_comparison->
x
x%>%sort
x
x%>%select(restaurant_id)%>%sort()
load("C:/Users/jiaoh/OneDrive/桌面/zq project2 ui/Data.RData")
load("C:/Users/jiaoh/OneDrive/桌面/zq project2 ui/index.RData")
load("C:/Users/jiaoh/OneDrive/桌面/zq project2 ui/Index_standard.RData")
library(shiny)
shinyUI(
div(id="house",
navbarPage(strong("Manhattan House Finder",style="color: white;"),
theme=shinytheme("flatly"),
#theme = "bootstrap.min.css",
#theme="styles.css",
tabPanel("Intro",
mainPanel(width=12,
setBackgroundImage(
src = "../background_1.jpg"
),
style = "color: white",
h2("Are Children Safe During After-school Activities?"),
h3("News:"),
h3("Dulce Maria Alavez, A 5-Year-Old Girl Went Missing From a Playground in New Jersey"),
p("Dulce went missing on the afternoon of Sept.
16 while her mother in the car with the 8-year-old son, roughly 30 yards away. The mother is still seeking
for information about her daughter two weeks after the girl is believed to have been abducted from a local park."),
p(em(a("New York Times",href="https://www.nytimes.com/2019/10/01/nyregion/missing-child-nj-dulce-alavez.html"))),
h2("Are Children Safe During After-school Activities?"),
p("Diego, a boy who was critically injured last week after being sucker-punched at school
in an assault captured on video died Tuesday night. Diego appears to hit his head on a concrete.He died after sending
to the hospital in a extremely critical condition.
"),
p(em(a("Los Angeles Times",href="https://www.latimes.com/california/story/2019-09-25/boy-sucker-punched-moreno-valley-school-dies-from-injuries"))),
h2("Are Children Safe During After-school Activities?"),
p("Developing an App that relates the crimes related to kids or teenagers with places where children spend the most, for instance, after-school activities spots. Inspired by how the Amber Alarm works, We want to develop visualization and give children warnings of certain areas even before they are in danger.
"),
p(),
p(em(a("Github link",href="https://github.com/TZstatsADS/fall2019-proj2--sec2-grp8"))),
div(class="footer", "Group Project by Lihao Xiao, Dingyi Fang, Mo Yang, Thomson Batidzirai, Sixuan Li")
)),
tabPanel("Map",
div(class="outer",
leafletOutput("map",width="100%",height=700),
absolutePanel(id = "control", class = "panel panel-default", fixed = TRUE, draggable = TRUE,
top = 170, left = 20, right = "auto", bottom = "auto", width = 320, height = "auto",
useShinyjs(),
##Possible to change to subway station and bus station
checkboxGroupInput("enable_markers", "Traffic:",
choices = c("Bus Station","Subway Station"),
selected = c("Subway Station")),
checkboxGroupInput("click_neighbourhood", "Neighbourhood",
choices =c("Crime","Noise","Park","Restaurant","Retail","School"), selected =c()),
sliderInput("click_radius", "Radius of area around  the selected address", min=50, max=500, value=250, step=10),
style = "opacity: 0.80"
),
#the panel on the right to show the statistics
absolutePanel(id = "Statistics", class = "panel panel-default", fixed= TRUE, draggable = TRUE,
top = 90, left = "auto", right = 20, bottom = "auto", width = 320, height = "auto",
style = "overflow-y:scroll;height:500px;max-height:550px",
useShinyjs(),
h3("Summary of Chosen Area"),
h4("The Geographical Information"),
p(textOutput("click_coord")),
h4("Average House Price/Square Feet"),
p(strong(textOutput("click_avg_price_red", inline = T))),
tags$head(tags$style("#click_avg_price_red{color: red;
font-size: 20px;
font-style: italic;
}"
)
),
p(strong(textOutput("click_avg_price_orange", inline = T))),
tags$head(tags$style("#click_avg_price_orange{color: orange;
font-size: 20px;
font-style: italic;
}"
)
shiny::runApp()
runApp()
nutrition<-c("Select",nutrition)
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
data_comparison%>%head(1)->x
x
x%>%select(Serving_Size,Serving_Size_Unit)->x
x
x%>%mutate(size=paste(Serving_Size,Serving_Size_Unit,sep=" "))
x%>%mutate(size=paste(Serving_Size,Serving_Size_Unit,sep=" ")%>%str_remove_all("NA NA"))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
x
data_comparison%>%head(1)
data_comparison%>%head(1)->x
runApp()
data_comparison
data_comparison[c(173,961),]
#test pieplot
plottestdata<-data_comparison[c(173,961),]
plottestdata
#test pieplot
plottestdata<-data_comparison[c(306,602),]
plottestdata
runApp()
runApp()
library(tidyverse)
load("../output/menu_nutrition_location_catagory.RData")
load("../output/menu_nutrition_location_catagory.RData")
data_comparison
names(menu_nutrition_location_catagory%>%select(restaurant,menu)%>%unnest(menu))
data_comparison<-menu_nutrition_location_catagory%>%select(restaurant,menu)%>%unnest(menu)%>%
select(restaurant,Item_Name,Item_Description,Food_Category,Serving_Size,Serving_Size_Unit,Calories:Dietary_Fiber,Shareable)%>%
filter(Shareable==0)%>%select(-Potassium,-Shareable)%>%group_by(restaurant)%>%arrange(restaurant)%>%nest()%>%ungroup%>%mutate(restaurant_id=row_number())%>%group_by(restaurant)%>%unnest()%>%mutate(menu_id=row_number())%>%
select(restaurant_id,restaurant,menu_id,Item_Name,Item_Description,Food_Category,everything())
data_comparison
colname
data_comparison<-menu_nutrition_location_catagory%>%select(restaurant,menu)%>%unnest(menu)%>%
select(restaurant,Item_Name,Item_Description,Food_Category,Serving_Size,Serving_Size_Unit,Calories:Dietary_Fiber,Shareable)%>%
filter(Shareable==0)%>%select(-Potassium,-Shareable)%>%group_by(restaurant)%>%arrange(restaurant)%>%nest()%>%ungroup%>%mutate(restaurant_id=row_number())%>%group_by(restaurant)%>%unnest()%>%mutate(menu_id=row_number())%>%
select(restaurant_id,restaurant,menu_id,Item_Name,Item_Description,Food_Category,everything())
colname<-data_comparison%>%colnames()
data_search<-menu_nutrition_location_catagory%>%select(restaurant,menu)%>%unnest(menu)%>%
select(restaurant,Item_Name,Item_Description,Food_Category,Serving_Size,Serving_Size_Unit,Calories:Dietary_Fiber,Shareable)%>%
filter(Shareable==0)%>%select(-Potassium,-Shareable)%>%group_by(restaurant)%>%arrange(restaurant)%>%nest()%>%ungroup%>%mutate(restaurant_id=row_number())%>%group_by(restaurant)%>%unnest()%>%mutate(menu_id=row_number())%>%
select(restaurant_id,restaurant,menu_id,Item_Name,Item_Description,Food_Category,everything())
colname<-data_search%>%colnames()
nutrition<-colname[9:18]
food_category<-data_search$Food_Category%>%unique()
View(data_search)
data_search<-menu_nutrition_location_catagory%>%select(restaurant,menu)%>%unnest(menu)%>%
select(restaurant,Item_Name,Item_Description,Food_Category,Serving_Size,Serving_Size_Unit,Calories:Dietary_Fiber,Shareable)%>%
filter(Shareable==0)%>%select(-Potassium,-Shareable)%>%group_by(restaurant)%>%arrange(restaurant)%>%nest()%>%ungroup%>%mutate(restaurant_id=row_number())%>%group_by(restaurant)%>%unnest()%>%mutate(menu_id=row_number())%>%
select(restaurant,Item_Name,Item_Description,Food_Category,everything())
View(data_search)
View(data_search)
View(data_search)
data_search<-menu_nutrition_location_catagory%>%select(restaurant,menu)%>%unnest(menu)%>%
select(restaurant,Item_Name,Item_Description,Food_Category,Serving_Size,Serving_Size_Unit,Calories:Dietary_Fiber,Shareable)%>%
filter(Shareable==0)%>%select(-Potassium,-Shareable)%>%group_by(restaurant)%>%arrange(restaurant)%>%nest()%>%ungroup%>%mutate(restaurant_id=row_number())%>%group_by(restaurant)%>%unnest()%>%mutate(menu_id=row_number())%>%
select(restaurant,Item_Name,Item_Description,Food_Category,Serving_Size:Dietary_Fiber)
View(data_search)
View(data_search)
data_search<-menu_nutrition_location_catagory%>%select(restaurant,menu)%>%unnest(menu)%>%
select(restaurant,Item_Name,Item_Description,Food_Category,Serving_Size,Serving_Size_Unit,Calories:Dietary_Fiber,Shareable)%>%
filter(Shareable==0)%>%select(-Potassium,-Shareable)%>%group_by(restaurant)%>%arrange(restaurant)%>%nest()%>%ungroup%>%mutate(restaurant_id=row_number())%>%group_by(restaurant)%>%unnest()%>%mutate(menu_id=row_number())%>%
select(restaurant,Item_Name,Item_Description,Food_Category,Serving_Size:Dietary_Fiber)
nutrition<-colname[9:18]
food_category<-data_search$Food_Category%>%unique()
food_category_search<-data_search_menu$Food_Category%>%unique()
data_search_menu<-menu_nutrition_location_catagory%>%select(restaurant,menu)%>%unnest(menu)%>%
select(restaurant,Item_Name,Item_Description,Food_Category,Serving_Size,Serving_Size_Unit,Calories:Dietary_Fiber,Shareable)%>%
filter(Shareable==0)%>%select(-Potassium,-Shareable)%>%group_by(restaurant)%>%arrange(restaurant)%>%nest()%>%ungroup%>%mutate(restaurant_id=row_number())%>%group_by(restaurant)%>%unnest()%>%mutate(menu_id=row_number())%>%
select(restaurant,Item_Name,Item_Description,Food_Category,Serving_Size:Dietary_Fiber)
colname<-data_search_menu%>%colnames()
nutrition_search<-colname[9:18]
food_category_search<-data_search_menu$Food_Category%>%unique()
food_category_search
x<-menu_nutrition_location_catagory%>%select(restaurant,location)%>%unnest(location)
View(x)
data_search_location<-menu_nutrition_location_catagory%>%select(restaurant,location)%>%unnest(location)
data_search_location<-menu_nutrition_location_catagory%>%select(restaurant,location)%>%unnest(location)
names(data_search_location)
cuisine_category_search<-data_search_location$`CUISINE DESCRIPTION`%>%unique()
cuisine_category_search
BORO_search<-data_search_location$BORO%>%unique()
BORO_search
view(data_search_location)
iris2 = iris[c(1:10, 51:60, 101:110), ]
datatable(iris2, filter = 'top', options = list(
pageLength = 5, autoWidth = TRUE
))
datatable(iris2, filter = 'top', options = list(
pageLength = 10, autoWidth = TRUE
))
datatable(iris2, filter = 'top', options = list(
pageLength = 5, autoWidth = TRUE
))
datatable(iris2, filter = 'top', options = list(
pageLength = 5, autoWidth = F
))
TRUE
10
data_search_location
data_search_location%>%names(data_search_location)
data_search_location%>%names
data_search_location<-menu_nutrition_location_catagory%>%select(restaurant,location)%>%unnest(location)%>%
select(-`INSPECTION DATE`,-SCORE)
data_search_location
datatable(data_search_location, filter = 'top', options = list(
pageLength = 5, autoWidth = TRUE
))
data_search_location<-menu_nutrition_location_catagory%>%select(restaurant,location)%>%unnest(location)%>%
select(-`INSPECTION DATE`,-SCORE)
names(data_search_location)
data_search_location<-menu_nutrition_location_catagory%>%select(restaurant,location)%>%unnest(location)%>%
select(-`INSPECTION DATE`,-SCORE)
data_search_location%>%mutate_at(c(restaurant,BORO,`CUISINE DESCRIPTION`,GRADE),as.factor)
data_search_location%>%mutate_at(c("restaurant","BORO",`CUISINE DESCRIPTION`,"GRADE"),as.factor)
data_search_location
data_search_location%>%mutate_at(c("restaurant","BORO",“,"GRADE"),as.factor)
data_search_location%>%mutate_at(c("restaurant","BORO","CUISINE DESCRIPTION","GRADE"),as.factor)
data_search_location<-menu_nutrition_location_catagory%>%select(restaurant,location)%>%unnest(location)%>%
select(-`INSPECTION DATE`,-SCORE)%>%mutate_at(c("restaurant","BORO","CUISINE DESCRIPTION","GRADE"),as.factor)
datatable(data_search_location, filter = 'top', options = list(
pageLength = 5, autoWidth = TRUE
))
names(data_search_location)
data_search_location<-menu_nutrition_location_catagory%>%select(restaurant,location)%>%unnest(location)%>%
select(restaurant,BORO,`CUISIN DESCRIPTION`,GRADE`,everything(),-`INSPECTION DATE`,-SCORE)%>%mutate_at(c("restaurant","BORO","CUISINE DESCRIPTION","GRADE"),as.factor)
data_search_location<-menu_nutrition_location_catagory%>%select(restaurant,location)%>%unnest(location)%>%
select(restaurant,BORO,`CUISIN DESCRIPTION`,GRADE`,everything())%>%select(-`INSPECTION DATE`,-SCORE)%>%mutate_at(c("restaurant","BORO","CUISINE DESCRIPTION","GRADE"),as.factor)
data_search_location<-menu_nutrition_location_catagory%>%select(restaurant,location)%>%unnest(location)%>%
select(restaurant,BORO,`CUISIN DESCRIPTION`,GRADE`,everything())%>%select(-`INSPECTION DATE`,-SCORE)%>%mutate_at(c("restaurant","BORO","CUISINE DESCRIPTION","GRADE"),as.factor)
data_search_location<-menu_nutrition_location_catagory%>%select(restaurant,location)%>%unnest(location)%>%
select(restaurant,BORO,`CUISIN DESCRIPTION`,GRADE`,everything())
data_search_location<-menu_nutrition_location_catagory%>%select(restaurant,location)%>%unnest(location)%>%
select(restaurant,BORO,`CUISIN DESCRIPTION`,GRADE,everything())%>%select(-`INSPECTION DATE`,-SCORE)%>%mutate_at(c("restaurant","BORO","CUISINE DESCRIPTION","GRADE"),as.factor)
data_search_location<-menu_nutrition_location_catagory%>%select(restaurant,location)%>%unnest(location)%>%
select(restaurant,BORO,`CUISIN DESCRIPTION`,GRADE,everything())%>%select(-`INSPECTION DATE`,-SCORE)
data_search_location<-menu_nutrition_location_catagory%>%select(restaurant,location)%>%unnest(location)%>%
select(restaurant,BORO,`CUISINE DESCRIPTION`,GRADE,everything())%>%select(-`INSPECTION DATE`,-SCORE)%>%mutate_at(c("restaurant","BORO","CUISINE DESCRIPTION","GRADE"),as.factor)
data_search_location
datatable(data_search_location, filter = 'top', options = list(
pageLength = 5, autoWidth = TRUE
))
data_search_location<-menu_nutrition_location_catagory%>%select(restaurant,location)%>%unnest(location)%>%
select(restaurant,BORO,`CUISINE DESCRIPTION`,GRADE,everything())%>%select(-`INSPECTION DATE`,-SCORE)%>%mutate_at(c("restaurant","BORO","CUISINE DESCRIPTION","GRADE"),as.factor)
data_search_menu<-menu_nutrition_location_catagory%>%select(restaurant,menu)%>%unnest(menu)%>%
select(restaurant,Item_Name,Item_Description,Food_Category,Serving_Size,Serving_Size_Unit,Calories:Dietary_Fiber,Shareable)%>%
filter(Shareable==0)%>%select(-Potassium,-Shareable)%>%group_by(restaurant)%>%arrange(restaurant)%>%nest()%>%ungroup%>%mutate(restaurant_id=row_number())%>%group_by(restaurant)%>%unnest()%>%mutate(menu_id=row_number())%>%
select(restaurant,Item_Name,Item_Description,Food_Category,Serving_Size:Dietary_Fiber)
names(data_search_menu)
data_search_menu<-menu_nutrition_location_catagory%>%select(restaurant,menu)%>%unnest(menu)%>%
select(restaurant,Item_Name,Item_Description,Food_Category,Serving_Size,Serving_Size_Unit,Calories:Dietary_Fiber,Shareable)%>%
filter(Shareable==0)%>%select(-Potassium,-Shareable)%>%group_by(restaurant)%>%arrange(restaurant)%>%nest()%>%ungroup%>%mutate(restaurant_id=row_number())%>%group_by(restaurant)%>%unnest()%>%mutate(menu_id=row_number())%>%
select(restaurant,Item_Name,Item_Description,Food_Category,Serving_Size:Dietary_Fiber)%>%mutate_at(c("restaurant","Food_Category"),as.factor)%>%select(restaurant,Food_Category,everything())
data_search_menu<-menu_nutrition_location_catagory%>%select(restaurant,menu)%>%unnest(menu)%>%
select(restaurant,Item_Name,Item_Description,Food_Category,Serving_Size,Serving_Size_Unit,Calories:Dietary_Fiber,Shareable)%>%
filter(Shareable==0)%>%select(-Potassium,-Shareable)%>%group_by(restaurant)%>%arrange(restaurant)%>%nest()%>%ungroup%>%mutate(restaurant_id=row_number())%>%group_by(restaurant)%>%unnest()%>%mutate(menu_id=row_number())%>%ungroup()%>%
select(restaurant,Item_Name,Item_Description,Food_Category,Serving_Size:Dietary_Fiber)%>%mutate_at(c("restaurant","Food_Category"),as.factor)%>%select(restaurant,Food_Category,everything())
colname<-data_search_menu%>%colnames()
nutrition_search<-colname[9:18]
nutrition_search
nutrition_search<-colname[7:16]
nutrition_search
View(data_search)
View(data_search_menu)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
load("../output/menu_nutrition_location_catagory.RData")
data_search_menu<-menu_nutrition_location_catagory%>%select(restaurant,menu)%>%unnest(menu)%>%
select(restaurant,Item_Name,Item_Description,Food_Category,Serving_Size,Serving_Size_Unit,Calories:Dietary_Fiber,Shareable)%>%
filter(Shareable==0)%>%select(-Potassium,-Shareable)%>%group_by(restaurant)%>%arrange(restaurant)%>%nest()%>%ungroup%>%mutate(restaurant_id=row_number())%>%group_by(restaurant)%>%unnest()%>%mutate(menu_id=row_number())%>%ungroup()%>%
select(restaurant,Item_Name,Item_Description,Food_Category,Serving_Size:Dietary_Fiber)%>%mutate_at(c("restaurant","Food_Category"),as.factor)%>%select(restaurant,Food_Category,everything())
colname<-data_search_menu%>%colnames()
nutrition_search<-colname[7:16]
data_search_location<-menu_nutrition_location_catagory%>%select(restaurant,location)%>%unnest(location)%>%
select(restaurant,BORO,`CUISINE DESCRIPTION`,GRADE,everything())%>%select(-`INSPECTION DATE`,-SCORE)%>%mutate_at(c("restaurant","BORO","CUISINE DESCRIPTION","GRADE"),as.factor)
save(data_search_menu,nutrition_search,data_search_location,file = "../output/data_search.RData")
library(tidyverse)
library(shiny)
# library(leaflet)
# library(data.table)
# library(plotly)
library(shinythemes)
library(DT)
#Statistics Analysis Global Enviroment
#Loading the required data:
load("data_comparison.RData")
load("data_search.RData")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(data_search_location)
View(data_search_location)
View(data_search_location)
runApp()
data_search_menu
data_search_menu$restaurant%>%unique()
data_search_location$restaurant%>%unique()
data_search_location$BORO%>%unique()
data_search_location$BORO%>%unique()
as.list(data_search_location$BORO%>%unique())
runApp()
data_search_location$GRADE%>%as.character()%>%unique()
runApp()
runApp()
data_search_location$GRADE%>%as.character()%>%unique()data_search_location
data_search_location
data_search_location%>%filter(restaurant%in% c("Starbucks"))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data_search_location%>%filter(restaurant%in% c("Starbucks"))data_search_menu
data_search_menu
data_search_menu%>%
mutate(size=paste(Serving_Size,Serving_Size_Unit,sep=" ")%>%
str_remove_all("NA NA"))
runApp()
runApp()
runApp()
runApp()
runApp()
data_search_menu
data_search_menu%>%
mutate(Serving_Size=paste(Serving_Size,Serving_Size_Unit,sep=" ")%>%
str_remove_all("NA NA"))%>%select(-Serving_Size_Unit)
data_search_menu%>%
mutate(Serving_Size=paste(Serving_Size,Serving_Size_Unit,sep=" ")
x<-data_search_menu%>%
mutate(Serving_Size=paste(Serving_Size,Serving_Size_Unit,sep=" ")%>%
str_remove_all("NA NA"))
x
x%>%drop_na(Serving_Size_Unit)
runApp()
#test pieplot
plottestdata<-data_comparison[c(306,602),]
plot_raw<-data_comparison%>%
filter(restaurant == "Applebee's" )%>%
select(Item_Name, Total_Fat:Dietary_Fiber)
load("C:/Users/jiaoh/OneDrive/桌面/zq project2 ui/indexv3.RData")
runApp('C:/Users/jiaoh/OneDrive/桌面/zq project2 ui')
View(indexv3)
indexv3
indexv3%>%filter(Price.PerSqFt<=2)
indexv3%>%filter(Price.PerSqFt<=1)
runApp('C:/Users/jiaoh/OneDrive/桌面/zq project2 ui')
indexv3$Price.PerSqFt%>%max()
indexv3$Price.PerSqFt%>%min()
runApp('C:/Users/jiaoh/OneDrive/桌面/zq project2 ui')
indexv3$Price.PerSqFt%>%sort()
indexv3$Price.PerSqFt%>%round(1)>%sort()
indexv3$Price.PerSqFt%>%round(1)%>%sort()
indexv3$Price.PerSqFt%>%round(0)%>%unique()%>%sort()
runApp('C:/Users/jiaoh/OneDrive/桌面/zq project2 ui')
runApp()
runApp('C:/Users/jiaoh/OneDrive/桌面/zq project2 ui')
runApp('C:/Users/jiaoh/OneDrive/桌面/zq project2 ui')
runApp('C:/Users/jiaoh/OneDrive/桌面/zq project2 ui')
runApp('C:/Users/jiaoh/OneDrive/桌面/zq project2 ui')
runApp('C:/Users/jiaoh/OneDrive/桌面/zq project2 ui')
plot_raw<-data_comparison%>%
filter(restaurant == "Applebee's" )%>%
select(Item_Name, Total_Fat:Dietary_Fiber)
table_nu<-plot_raw[c(2,4),]
plot<-plot_ly()
table_nu
plot_raw<-data_comparison%>%
filter(restaurant == "Applebee's" )
table_nu<-plot_raw[c(2,4),]
plot<-plot_ly()
for(i in 1:nrow(table_nu)){
plot<-plot %>%
add_pie(data = table_nu[i,]%>%
select(Item_Name,Total_Fat:Dietary_Fiber)%>%
pivot_longer(Total_Fat:Dietary_Fiber,"nutrition","value")%>%
mutate(value=replace_na(value, 0)),
labels = ~nutrition, values = ~value,
name = "Color", domain = list(row = 0, column = i-1))
}
plot <- plot %>%
layout(title = "Pie Charts with Subplots", showlegend = F,
grid=list(rows=1, columns=nrow(table_nu)),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
plot
table_nu
runApp()
# library(leaflet)
# library(data.table)
library(plotly)
runApp()
runApp()
runApp()
data_comparison
runApp()
?add_pie
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
